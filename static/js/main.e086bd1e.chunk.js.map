{"version":3,"sources":["components/QuoteText.js","pages/Home.js","components/AuthorQuote.js","pages/AuthorQuotes.js","App.js","index.js"],"names":["Quote","quoteText","quoteAuthor","quoteGenre","quoteSlug","className","size","to","useState","isDark","setIsDark","data","randomQuote","setRandomQuote","nextQuote","fetch","then","response","json","error","console","useEffect","authorName","fullQuote","author","text","genre","slug","toLowerCase","split","join","handleClick","Features","onClick","TwitterShareButton","url","title","QuoteText","Catalogue","props","authorQuotes","setAuthorQuotes","match","params","map","name","toUpperCase","substr","quote","index","App","path","exact","component","Home","AuthorQuotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e086bd1e.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport * as GoIcons from 'react-icons/go';\r\nimport * as CgIcons from 'react-icons/cg';\r\nimport * as MdIcons from 'react-icons/md';\r\n\r\n\r\nconst Quote = ({ quoteText, quoteAuthor, quoteGenre, quoteSlug }) => (\r\n    <div className=\"quote-container\">\r\n        <div className=\"quote\">\r\n            <div className=\"quote-bar\"></div>\r\n            <div className=\"quote-text\">\r\n                <GoIcons.GoQuote size=\"30\" />\r\n                <h1 className=\"text\">{quoteText}</h1>\r\n                <div className=\"author-info\">\r\n                    <Link to={\"/author/\" + quoteSlug} className=\"author-link\">\r\n                        <h4 className=\"author\">{quoteAuthor}</h4>\r\n                        <h4 className=\"genre\">{quoteGenre}</h4>\r\n                        <div className=\"touch-icon\">\r\n                            <CgIcons.CgArrowLongRight size=\"25\" className=\"right-arrow\" />\r\n                            <MdIcons.MdTouchApp size=\"28\" className=\"point-icon\" />\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Quote","import React, { useEffect, useState } from 'react';\r\nimport QuoteText from '../components/QuoteText';\r\nimport { TwitterShareButton, TwitterIcon } from 'react-share';\r\n// import Features from '../components/Features'\r\nimport * as BsIcons from 'react-icons/bs';\r\nimport * as SiIcons from 'react-icons/si';\r\nimport * as CgIcons from 'react-icons/cg';\r\nimport './Home.css';\r\n\r\nconst Quote = () => {\r\n  const [isDark, setIsDark] = useState(false);\r\n  const [randomQuote, setRandomQuote] = useState({\r\n    data: [\r\n      {\r\n        quoteText:\r\n          'I think the thing we see is that as people are using video games more, they tend to watch passive TV a bit less. And so using the PC for the Internet, playing video games, is starting to cut into the rather unbelievable amount of time people spend watching TV.',\r\n        quoteAuthor: 'Bill Gates',\r\n        quoteGenre: 'business',\r\n      },\r\n    ],\r\n  });\r\n\r\n  const nextQuote = () => {\r\n    try {\r\n      fetch('https://quote-garden.herokuapp.com/api/v3/quotes/random')\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setRandomQuote(data);\r\n        });\r\n    } catch (error) {\r\n      console.error('Error: ', error);\r\n    }\r\n  };\r\n\r\n  useEffect(nextQuote, []);\r\n\r\n  const generateAuthorSlug = (authorName) =>\r\n    authorName.toLowerCase().split(' ').join('-');\r\n\r\n  const fullQuote = {\r\n    author: randomQuote.data[0].quoteAuthor,\r\n    text: randomQuote.data[0].quoteText,\r\n    genre: randomQuote.data[0].quoteGenre,\r\n    slug: generateAuthorSlug(randomQuote.data[0].quoteAuthor),\r\n  };\r\n\r\n  const handleClick = () => setIsDark(!isDark);\r\n\r\n  const Features = () => (\r\n    <div className=\"feature-container \">\r\n      <div className=\"modes\" onClick={handleClick}>\r\n        <BsIcons.BsSun className=\"darkmode\" size=\"30\" />\r\n      </div>\r\n      <div className=\"share-twitter\">\r\n        <TwitterShareButton url=\"twitter.com/intent/tweet\" title={randomQuote}>\r\n          <SiIcons.SiTwitter className=\"twitter-icon\" size=\"32\" />\r\n        </TwitterShareButton>\r\n      </div>\r\n      <div className=\"next-quote\" onClick={nextQuote}>\r\n        <button className=\"next\">Next Quote</button>\r\n        <CgIcons.CgArrowLongRight size=\"25\" className=\"next-icon\" />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={isDark ? 'Dark-Mode' : 'Light-Mode'}>\r\n      <QuoteText\r\n        quoteText={fullQuote.text}\r\n        quoteAuthor={fullQuote.author}\r\n        quoteGenre={fullQuote.genre}\r\n        quoteSlug={fullQuote.slug}\r\n      />\r\n      <Features />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n","import React from 'react';\r\n\r\nconst Quote = ({ quoteText }) => (\r\n  <>\r\n    <div className=\"ind-author-quote\">\r\n      <div className=\"ind-quote-bar\"></div>\r\n      <div className=\"quote-text\">{quoteText}</div>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default Quote;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Quote from '../components/AuthorQuote';\r\nimport '../components/AuthorQuotes.css';\r\n\r\nconst Catalogue = (props) => {\r\n    const [authorQuotes, setAuthorQuotes] = useState([]);\r\n\r\n    const generateAuthorName = () => props.match.params.authorName.split('-')\r\n        .map((name) => name[0].toUpperCase() + name.substr(1))\r\n        .join(' ');\r\n\r\n    const author = generateAuthorName();\r\n\r\n    useEffect(() => {\r\n        fetch(`https://quote-garden.herokuapp.com/api/v3/quotes?author=${author}`)\r\n            .then((response) => response.json())\r\n            .then((response) => {\r\n                setAuthorQuotes(response.data);\r\n            });\r\n    }, [author]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"author-catalogue\">\r\n                <div className=\"back-to-home\">\r\n                    <Link to=\"/\">\r\n                        <button className=\"back\">Back</button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"author-quotes\">\r\n                    <h1 className=\"author-name\">{author}</h1>\r\n                    {authorQuotes.map((quote, index) => (\r\n                        <Quote quoteText={quote.quoteText} key={index} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Catalogue;\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport AuthorQuotes from './pages/AuthorQuotes';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/author/:authorName\" exact component={AuthorQuotes} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}